generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Game {
  id          String      @id @default(uuid())
  steamAppId  Int         @unique // Steam app id
  name        String // Name of the game
  processName String // To be used to identify the game process
  isActive    Boolean     @default(true) // Controls visibility to users
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  GameCheat   GameCheat[]
}

model Cheat {
  id         String        @id @default(uuid())
  name       String        @unique // Enforces "health", "godmode", "speed", etc.
  categoryId String // Category of the cheat
  category   CheatCategory @relation(fields: [categoryId], references: [id])
  isActive   Boolean       @default(true) // Controls visibility to users
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt
  GameCheat  GameCheat[]
}

model GameCheat {
  id          String   @id @default(uuid())
  game        Game     @relation(fields: [gameId], references: [id])
  gameId      String
  cheat       Cheat    @relation(fields: [cheatId], references: [id])
  cheatId     String
  displayName String? // Custom name override (optional)
  offsets     Json
  // {
  //   "moduleName": "Battlefront2.dll",
  //   "baseAddress": "023DF1B0",
  //   "offsets": [38],
  //   "valueType": "int32",
  // }
  parameters  Json
  // {
  //   "min": 0,
  //   "max": 1,
  //   "step": 1
  // }
  isActive    Boolean  @default(true) // Controls visibility to users
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([gameId, cheatId]) // Prevent duplicate cheat assignments
}

model CheatCategory {
  id       String            @id @default(uuid())
  name     CheatCategoryType @unique // name of the category
  priority Int               @default(0) // show the category in the order of the priority (0 is the first)
  Cheat    Cheat[]
}

// Enum for the category of the cheat
enum CheatCategoryType {
  PLAYER // 0
  INVENTORY // 1
  STATS // 2
  ENEMIES // 3
  WEAPONS // 4
  GAME // 5
  PHYSICS // 6
  TELEPORT // 7
  OTHER // 8
}
